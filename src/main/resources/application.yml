server:
  port: 8090

spring:
  application:
    name: domain-config-service
  
  datasource:
    url: jdbc:postgresql://localhost:5432/tiny_steps_domain_config
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=1h
    cache-names:
      - domainConfigs
      - allDomainConfigs
      - domainsByContext
      - paymentRequiredDomains
      - domainsByTransaction
  
  cloud:
    discovery:
      enabled: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.tinysteps.domainconfig: DEBUG
    org.springframework.cache: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/domain-config-service.log

# Domain Configuration Settings
domain:
  config:
    default-cache-ttl: 3600 # 1 hour in seconds
    validation:
      strict-mode: true
    supported-domains:
      - healthcare
      - ecommerce
      - cab-booking
    
# Custom Application Properties
app:
  name: "Domain Configuration Service"
  version: "1.0.0"
  description: "Centralized domain configuration management for multi-domain microservices"
  
# Security Configuration (if needed)
security:
  jwt:
    enabled: false # Disable JWT for internal service communication
  
# API Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  packages-to-scan: com.tinysteps.domainconfig.controller